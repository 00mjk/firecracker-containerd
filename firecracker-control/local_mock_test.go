// Code generated by MockGen. DO NOT EDIT.
// Source: local.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	reflect "reflect"
)

// MockmachineIface is a mock of machineIface interface
type MockmachineIface struct {
	ctrl     *gomock.Controller
	recorder *MockmachineIfaceMockRecorder
}

// MockmachineIfaceMockRecorder is the mock recorder for MockmachineIface
type MockmachineIfaceMockRecorder struct {
	mock *MockmachineIface
}

// NewMockmachineIface creates a new mock instance
func NewMockmachineIface(ctrl *gomock.Controller) *MockmachineIface {
	mock := &MockmachineIface{ctrl: ctrl}
	mock.recorder = &MockmachineIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockmachineIface) EXPECT() *MockmachineIfaceMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockmachineIface) Start(arg0 context.Context) error {
	ret := m.ctrl.Call(m, "Start", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockmachineIfaceMockRecorder) Start(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockmachineIface)(nil).Start), arg0)
}

// StopVMM mocks base method
func (m *MockmachineIface) StopVMM() error {
	ret := m.ctrl.Call(m, "StopVMM")
	ret0, _ := ret[0].(error)
	return ret0
}

// StopVMM indicates an expected call of StopVMM
func (mr *MockmachineIfaceMockRecorder) StopVMM() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopVMM", reflect.TypeOf((*MockmachineIface)(nil).StopVMM))
}

// Wait mocks base method
func (m *MockmachineIface) Wait(arg0 context.Context) error {
	ret := m.ctrl.Call(m, "Wait", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Wait indicates an expected call of Wait
func (mr *MockmachineIfaceMockRecorder) Wait(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wait", reflect.TypeOf((*MockmachineIface)(nil).Wait), arg0)
}

// SetMetadata mocks base method
func (m *MockmachineIface) SetMetadata(arg0 context.Context, arg1 interface{}) error {
	ret := m.ctrl.Call(m, "SetMetadata", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMetadata indicates an expected call of SetMetadata
func (mr *MockmachineIfaceMockRecorder) SetMetadata(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetadata", reflect.TypeOf((*MockmachineIface)(nil).SetMetadata), arg0, arg1)
}
